@model Citlali.Models.User

@section head{
  <link rel="stylesheet" href="~/css/Profile.css" asp-append-version="true" />
  <script src="~/js/Profile.js" asp-append-version="true"></script>
}

@{
  ViewData["Title"] = "Profile";
  var navModel = new Citlali.Models.NavModel
  {
    profileImageUrl = Model.ProfileImageUrl
  };
}

<div class="window">
  <form asp-controller="Auth" asp-action="SignOut" method="post">
    <button type="submit" class="btn btn-danger">Sign Out</button>
  </form>

  <div class="edit-popup" id="edit-popup">
    <div class="popup-content">
      <form class="edit_form" asp-controller="User" asp-action="edit" method="post" enctype="multipart/form-data">
        <div class="popup-navigation">
          <a class="popup-action-button" onclick="closeDialog()">
            <span>
              @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size24.DismissCircle>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
            </span>
          </a>
          <h1>Edit Profile</h1>
          <button type="submit" class="popup-action-button">
            <span>
              @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size24.Save>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
            </span>
          </button>
        </div>

        <div class="popup-body">
          <div class="popup-profile-image">
              <img src="@Model.ProfileImageUrl" alt="Profile Image" id="profilePreview" />
                <label for="profileImage" class="upload-button">
                    <span>
                      @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Image>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
                    </span>
                    <span>
                      Upload image...
                    </span>
                </label>
              <input type="file" id="profileImage" name="ProfileImage" style="display: none;" />
          </div>

          <div class="popup-info">
            <div class="form-group">
              <label for="Email">Email</label>
                  <input asp-for="Email" class="form-control disabled-input" value=@Model.Email id="Email" disabled />
                  <span asp-validation-for="Email" class="text-danger"></span>
              </div>

              <div class="form-group">
                  <label for="Username">Username</label>
                  <input asp-for="Username" class="form-control disabled-input" id="Username" disabled />
                  <span asp-validation-for="Username" class="text-danger"></span>
              </div>

              <div class="form-group">
                  <label for="DisplayName">Display Name</label>
                  <input asp-for="DisplayName" class="form-control" id="DisplayName" />
                  <span asp-validation-for="DisplayName" class="text-danger"></span>
              </div>

              <div class="form-group" id="bio">
                  <label for="UserBio">User Bio</label>
                  <textarea asp-for="UserBio" id="UserBio" rows="3"></textarea>
                  <span asp-validation-for="UserBio" class="text-danger"></span>
              </div>
          </div>

        </div>
      </form>
    </div>
  </div>

  <div class="profile-card">
    <div class="profile-header">
      <div class="profile-image">
        <img src=@Model.ProfileImageUrl alt="Profile Image" />
      </div>
      <div class="user-info">
        <h1>@Model.DisplayName</h1>
        <div class="display-name">
          <p class="username">
            <span>
              @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.ContactCard>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
            </span>
            <span>
              @Model.Username
            </span>
          </p>
          <div class="button-group">
            <a class="action-button" id="edit-button" onclick="openDialog()">
              <span>
                @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Edit>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
              </span>
              <span>
                Edit profile...
              </span>
            </a>
            <a class="action-button">
              <span>
                @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.AddCircle>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
              </span>
              <span>
                Follow
              </span>
            </a>
          </div>
        </div>
        <div class="meta-data">
          <div class="data">
            <h3>32</h3>
            <p>Posts</p>
          </div>
          <div class="data">
            <h3>1332</h3>
            <p>Followers</p>
          </div>
          <div class="data">
            <h3>6969</h3>
            <p>Followings</p>
          </div>
        </div>
        <div class="user-bio">
          <p>
            @Model.UserBio
          </p>
        </div>
      </div>
    </div>
  </div>

  <hr />

</div>