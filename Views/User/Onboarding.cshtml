@model Citlali.Models.UserOnboardingDto

@{
    string userEmail = ViewBag.Email ?? "No email provided";
    string profileImageUrl = ViewBag.ProfileImageUrl ?? "";
    List<Tag> tags = ViewBag.Tags ?? new List<Tag>();
}

@section head{
    <link rel="stylesheet" href="~/css/Onboarding.css" asp-append-version="true" />
    <script src="~/js/Register.js"></script>
}

<div class="window">
    <div class="content">
        <div class="header">
            <h1>Setup your basic profile ðŸŽ‰</h1>
            <p>This profile represents you in the community and will be shown to others when you engage with events. Take a moment to personalize it as you wish ! </p>
        </div>
        <form class="form-container" asp-action="onboarding" method="post" enctype="multipart/form-data">
            <div class="profile-wrapper">
                <div class="profile-img">
                    <img src="@profileImageUrl" class="profileImage" id="profileImage" alt="Profile Picture">
                    <input type="file" asp-for="ProfileImage" id="ProfileImageInput" hidden />

                    <label for="ProfileImageInput" class="upload-button">
                        <span>
                            @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Image>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
                        </span>
                        <span>
                            Upload image...
                        </span>
                    </label>

                    <p class="description">Support jpeg / jpg / png file with the size less than 10 MB</p>
                </div>
                <div class="profile-info">
                    <div class="form-group">
                        <label for="Email" class="required">Email</label>
                        <input asp-for="Email" class="form-control disabled-input" value=@userEmail id="Email" disabled />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="Username" class="required">Username</label>
                        <input asp-for="Username" class="form-control" id="Username" required 
                            pattern="^[A-Za-z][A-Za-z0-9_]{3,29}$" 
                            title="Username can only contain letters, numbers and underscores" />
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label for="DisplayName" class="required">Display Name</label>
                        <input asp-for="DisplayName" class="form-control" id="DisplayName" required 
                            minlength="2" maxlength="50"
                            title="Display name must be between 2-50 characters" />
                        <span asp-validation-for="DisplayName" class="text-danger"></span>
                    </div>

                    <div class="form-group" id="bio">
                        <label for="UserBio">User Bio</label>
                        <textarea asp-for="UserBio" id="UserBio" rows="3" maxlength="500"></textarea>
                        <span asp-validation-for="UserBio" class="text-danger"></span>
                        <div class="bio-char-count"><span id="bioCharCount">0</span>/500 characters</div>
                    </div>
                    <div class="tag-selecting">
                        <h3>What are you interested in?</h3>
                        <div class="tags" id="tags">
                            @foreach (var tag in tags)
                            {
                                <div class="tag" id="@tag.TagId" name="" onclick="toggleTagSelection(this, '@tag.TagId')">
                                    <span>@tag.TagEmoji</span>
                                    <span>@tag.TagName</span>
                                    <input type="hidden" name="SelectedTags" value="" id="tagInput_@tag.TagId" />
                                </div>
                            }
                        </div>
                    </div>
                    <div class="continue">
                        <button class="continue-button" type="submit">
                            <span>
                                @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.AirplaneTakeOff>>(RenderMode.ServerPrerendered))
                            </span>
                            <span>
                                Continue
                            </span>
                        </button>
                </div>

            </div>
        </form>
    </div>
</div>
