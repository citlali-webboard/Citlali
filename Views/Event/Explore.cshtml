@model Citlali.Models.EventExploreViewModel;

@section head {
    <link rel="stylesheet" href="~/css/Form.css" asp-append-version="true" />
    <script src="~/js/Event/Explore.js" asp-append-version="true"></script>
}

@{
    ViewData["Title"] = "Explore";
}

<div class="center-wrapper">
    <div class="sidebar-left">
        <div class="sidebar-card">
            <h2>Filter by tags üè∑Ô∏è</h2>
            <div class="tags-container" id="tags-container">
                @{
                    int initialTagsToShow = 10;
                    bool hasMoreTags = Model.Tags.Count() > initialTagsToShow;
                }
                
                @for (int i = 0; i < Model.Tags.Count(); i++)
                {
                    var tag = Model.Tags.ElementAt(i);
                    var isHidden = i >= initialTagsToShow;
                    
                    <div class="tag @(isHidden ? "tag-hidden" : "")" data-index="@i">
                        <a href="/event/tag/@tag.TagId">@tag.TagEmoji @tag.TagName</a>
                    </div>
                }
            </div>
            
            @if (hasMoreTags)
            {
                <div class="tags-toggle">
                    <button id="tags-toggle-btn" class="tags-toggle-btn">
                        <span class="toggle-text">See more</span>
                        <svg class="toggle-icon" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <polyline points="6 9 12 15 18 9"></polyline>
                        </svg>
                    </button>
                </div>
            }
        </div>
        <div class="sidebar-card">
            <h2>Filter by locations üìç</h2>
        </div>
    </div>
    <div class="main-content">
        <div class="main-header">
        <div class="controls-row">
                <div class="button-group">
                    <button class="sort-btn @(ViewBag.SortBy == "newest" ? "active" : "")" data-sort="newest">
                        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Clock>>(RenderMode.ServerPrerendered, new { Color = Color.Custom }))
                        Newest
                    </button>
                    <button class="sort-btn @(ViewBag.SortBy == "date" ? "active" : "")" data-sort="date">
                        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Calendar>>(RenderMode.ServerPrerendered, new { Color = Color.Custom }))
                        Event Date
                    </button>
                    <button class="sort-btn @(ViewBag.SortBy == "popularity" ? "active" : "")" data-sort="popularity">
                        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Star>>(RenderMode.ServerPrerendered, new { Color = Color.Custom }))
                        Popularity
                    </button>
                </div>

                <a href="/event/create" class="create-btn">
                    Create event
                    @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Add>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
                </a>
            </div>
        </div>
        <div class="event-list">
            @foreach (var eventItem in Model.EventBriefCardDatas) {
                <partial name="_EventBriefCard" model=eventItem />
            }
        </div>
        <div class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <a href="@Url.Action("Explore", new { page = Model.CurrentPage - 1, sortBy = ViewBag.SortBy })" class="pagination-link">Previous</a>
            }

            @for (var i = 1; i <= Model.TotalPage; i++)
            {
                <a href="@Url.Action("Explore", new { page = i, sortBy = ViewBag.SortBy })" class="@(i == Model.CurrentPage ? "pagination-current-page" : "pagination-link")">@i</a>
            }

            @if (Model.CurrentPage < Model.TotalPage)
            {
                <a href="@Url.Action("Explore", new { page = Model.CurrentPage + 1, sortBy = ViewBag.SortBy })" class="pagination-link">Next</a>
            }
        </div>
    </div>
    <div class="sidebar-right">
        <div class="sidebar-card">
            <h2>Trending events üî•</h2>
        </div>
        <div class="sidebar-card">
            <h2>Popular tags üè∑Ô∏è</h2>
        </div>
        <div class="sidebar-card">
            <h2>Superstar users ‚ú®</h2>
        </div>
        <div class="credit">
            <h3>
                Dev with ü©∑ by code4dad
                <a href="https://github.com/citlali-webboard/Citlali">
                    @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Code>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
                </a>
            </h3>
            <p>This project is a part of 01076120 WEB APPLICATION DEVELOPMENT PROJECT - Computer Engineering KMITL</p>
        </div>
    </div>
</div>