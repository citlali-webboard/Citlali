@model Citlali.Models.EventDetailCardData;

<div class="event-detail detail-column">
    <div class="info-line">
        <div class="creator">
            <a href="/user/@Model.CreatorUsername">
                <img class="pfp" src=@Model.CreatorProfileImageUrl alt="Creator Profile Picture"/>
                <span id="creator-name">@Model.CreatorDisplayName</span>
            </a>
            <div class="creator-meta">
                <span class="created-time">@Model.CreatedAt.ToString("dd/MM/yy • h:mm tt")</span>
                <a href="/event/location/@Model.LocationTag.LocationTagId">
                    <span class="location">
                        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Location>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
                        @Model.LocationTag.LocationTagName
                    </span>
                </a>
            </div>

            <!-- Mobile meta container -->
            <div class="mobile-meta-container">
                <div class="participants">
                    @if (Model.FirstComeFirstServed)
                    {
                <span title="First-come-first-served event. Register early to secure your spot!">
                    <div class="participants-icon-limiter ">
                        <div class="scaling-svg-container">
                            @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.PersonRunning>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
                        </div>
                    </div>
                </span>
                    }
                    else {
                        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.PeopleTeam>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
                    }
                    <span>@Model.CurrentParticipant / @Model.MaxParticipant</span>
                </div>
                <a href="/event/tag/@Model.EventCategoryTag.EventCategoryTagId">
                    <div class="tag">
                        <span>@Model.EventCategoryTag.EventCategoryTagEmoji</span>
                        <span>@Model.EventCategoryTag.EventCategoryTagName</span>
                    </div>
                </a>
            </div>
        </div>

        <!-- Desktop participants counter -->
        <div class="participants desktop-participants">
            @if (Model.FirstComeFirstServed)
            {
                <div class="participants-icon-limiter ">
                    <div class="scaling-svg-container">
                        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.PersonRunning>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
                    </div>
                </div>
            }
            else {
                @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.PeopleTeam>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
            }
            <span>@Model.CurrentParticipant / @Model.MaxParticipant</span>
        </div>
    </div>

    <div class="title-section">
        <h1 class="title-text">@Model.EventTitle</h1>
        <!-- Desktop tag -->
        <a href="/event/tag/@Model.EventCategoryTag.EventCategoryTagId">
            <div class="tag desktop-tag">
                <span>@Model.EventCategoryTag.EventCategoryTagEmoji</span>
                <span>@Model.EventCategoryTag.EventCategoryTagName</span>
            </div>
        </a>
    </div>

    <div class="meta-section">
        <div class="datetime">
            <span>
                @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Calendar>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
            </span>
            <span class="date-text">@Model.EventDate.ToString("ddd, MMM d, yyyy • h:mm tt")</span>
        </div>
        <div class="cost">
            <span>
                @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Money>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
            </span>
            <span>@(Model.Cost > 0 ? $"{Model.Cost} THB" : "Free")</span>
        </div>
    </div>

    <p class="description">@Model.EventDescription</p>
</div>