@model Citlali.Models.EventStatusViewModel

@{
    ViewData["Title"] = $"Status of {Model.EventDetailCardData.EventTitle}";
    var eventStatus = Model.Status.ToLower();

    // Use this for debugging
    // eventStatus = "confirmed";

    var statusTitle = "";
    var statusDescription = "";

    if (eventStatus == "pending")
    {
        statusTitle = "You have requested to join this event!";
        statusDescription = "You will recieve the notification once the event's owner reviewed your registration.";
    }
    else if (eventStatus == "awaiting-confirmation")
    {
        statusTitle = "You have been invited to join this event!";
        statusDescription = "Congratulations! You have been invited to join this event. Please confirm your attendance to this event.";
    }
    else if (eventStatus == "rejected")
    {
        statusTitle = "Your request has been rejected.";
        statusDescription = "Unfortunately, your request has been rejected by the event's owner. You can try to join other events.";
    }
    else if (eventStatus == "rejected-invitation") {
        statusTitle = "You have rejected this invitation.";
        statusDescription = "You have rejected this invitation. You won't be able to re-join this event.";
    }
    else if (eventStatus == "confirmed") {
        statusTitle = "You have been confirmed to join this event!";
        statusDescription = "Congratulations! Your request has been confirmed. You can now join this event.";
    }

    var registrationTime = Model.RegistrationTime.ToString("dd MMMM yyyy HH:mm:ss");

}
<div class="center-wrapper">

    <div class="status-page">
        <a href="/event/explore" id="back-button">
            <button class="action-button back-button">
                @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.ArrowLeft>>(RenderMode.ServerPrerendered, new { Color = Color.Success }))
                Explore
            </button>
        </a>
        <div class="status">
            <div class="status-symbol @eventStatus">
                <div class="status-symbol-size-limiter">
                    <div class="scaling-svg-container">
                        @if (eventStatus == "pending")
                        {
                            @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size32.ChatArrowBackDown>>(RenderMode.ServerPrerendered, new { Color = Color.Fill }))
                        }
                        else if (eventStatus == "awaiting-confirmation")
                        {
                            @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size32.ChatMultiple>>(RenderMode.ServerPrerendered, new { Color = Color.Fill }))

                        }
                        else if (eventStatus == "rejected" || eventStatus == "rejected-invitation")
                        {
                            @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size32.Dismiss>>(RenderMode.ServerPrerendered, new { Color = Color.Fill }))

                        }
                        else if (eventStatus == "confirmed")
                        {
                            @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size32.Checkmark>>(RenderMode.ServerPrerendered, new { Color = Color.Fill }))
                        }
                    </div>
                </div>
            </div>
            <h1 class="status-title">@statusTitle</h1>
            <p class="status-description">@statusDescription</p>
            <div class="button-group">
                @if (eventStatus == "awaiting-confirmation")
                {
                    <form asp-action="RejectedInvitation" asp-controller="Event" method="post" onsubmit="return confirm('Are you sure to reject this invitation?');">
                        <input type="hidden" name="eventId" value="@Model.EventDetailCardData.EventId" />
                        <button type="submit" class="action-button cancel-button">
                            @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.CalendarCancel>>(RenderMode.ServerPrerendered, new { Color = Color.Warning }))
                            Reject Invitation
                        </button>
                    </form>
                    <form asp-action="Confirmed" asp-controller="Event" method="post">
                        <input type="hidden" name="eventId" value="@Model.EventDetailCardData.EventId" />
                        <button type="submit" class="action-button confirm-button">
                            @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.Checkmark>>(RenderMode.ServerPrerendered, new { Color = Color.Success }))
                            Confirm Invitation
                        </button>
                    </form>
                }
                @if (eventStatus == "pending")
                {
                    <form asp-action="CancelRegistration" asp-controller="Event" method="post" onsubmit="return confirm('Are you sure you want to cancel your request?');">
                        <input type="hidden" name="eventId" value="@Model.EventDetailCardData.EventId" />
                        <button type="submit" class="action-button cancel-button">
                            @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.CalendarCancel>>(RenderMode.ServerPrerendered, new { Color = Color.Warning }))
                            Cancel Request
                        </button>
                    </form>
                }
            </div>
        </div>
        <div class="event-wrapper">
            <partial name="_EventDetailCard" model=@Model.EventDetailCardData />
        </div>
        <div class="join-time">
            <h3>You have requested to join at <strong>@registrationTime</strong></h3>
        </div>
    </div>
</div>
