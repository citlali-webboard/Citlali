@model Citlali.Models.EventBriefCardData;

@functions {
    public string GetFutureRelativeTime(DateTime date) {
        const int SECOND = 1;
        const int MINUTE = 60 * SECOND;
        const int HOUR = 60 * MINUTE;
        const int DAY = 24 * HOUR;
        const int MONTH = 30 * DAY;

        var diff = date - DateTime.Now;
        var timeSpan = Math.Floor(diff.TotalSeconds);
        if (timeSpan <= 0) {
            throw new InvalidDataException();
        }

        if (timeSpan < 1 * MINUTE)
            return "a few seconds";
        if (timeSpan < 2 * MINUTE)
            return "a minute";
        if (timeSpan < 1 * HOUR)
            return $"{Math.Floor(timeSpan / MINUTE)} minutes";
        if (timeSpan < 2 * HOUR)
            return "an hour";
        if (timeSpan < 1 * DAY)
            return $"{Math.Floor(timeSpan / HOUR)} hours";
        if (timeSpan < 2 * DAY)
            return "tomorrow";
        if (timeSpan < 1 * MONTH)
            return $"{Math.Floor(timeSpan / DAY)} days";

        return date.ToString("MMM dd, yyyy");
    }
}

@{
    string relativeTime;
    bool expired = false;
    try {
        relativeTime = $"Expiring in {GetFutureRelativeTime(Model.CreatedAt)}";
    } catch (InvalidDataException) {
        expired = true;
        relativeTime = "Expired";
    }
}

<div class="card space-y-4">
    <a href="../event/detail/@Model.EventId">
        <div class="header-data">
            <span class="creator">
                <img src="@Model.CreatorProfileImageUrl" alt="Creator" />
                <span>@Model.CreatorDisplayName</span>
                <span class="created-time">@Model.CreatedAt.ToString("t") â€¢ @Model.CreatedAt.ToString("d")</span>
            </span>
            <span class="participant">
                @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size16.PeopleTeam>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral}))
                @Model.CurrentParticipant/@Model.MaxParticipant
            </span>
        </div>

        <div class="card-title">
            <span class="event-title">@Model.EventTitle</span>
            <span class="tag">
                <span>@Model.EventCategoryTag.EventCategoryTagEmoji</span>
                <span>@Model.EventCategoryTag.EventCategoryTagName</span>
            </span>
        </div>

        <div class="justify-between">
            <span class="description">@Model.EventDescription</span>
            <span class="@(expired ? "expired" : "active")">@relativeTime</span>
        </div>
    </a>
</div>