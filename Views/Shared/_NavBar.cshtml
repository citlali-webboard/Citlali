@{
    var accessToken = Context.Request.Cookies["accessToken"];
    var refreshToken = Context.Request.Cookies["refreshToken"];
    var profileImageUrl = Context.Request.Cookies["profileImageUrl"];

    bool IsAuthenticated = !string.IsNullOrEmpty(accessToken) && !string.IsNullOrEmpty(refreshToken);

    if (string.IsNullOrEmpty(profileImageUrl))
    {
        profileImageUrl = "/images/default-profile.png";
    }
    var timestamp = DateTime.Now.Ticks;
    profileImageUrl = $"{profileImageUrl}?v={timestamp}";
}

<link rel="stylesheet" href="~/css/NavBar.css" asp-append-version="true" />

<nav>
  <div class="mobile-nav-toggle" id="mobile-nav-toggle">
    <span class="bar"></span>
    <span class="bar"></span>
    <span class="bar"></span>
  </div>

  <ul>
    <div class="nav-group">
      <a href="/">
        <div class="logo">
          <img src="~/citlali.webp" alt="Logo" class="website-logo">
          <p>Citlali</p>
        </div>
      </a>
    </div>

    <div class="nav-group" id="navigation-links">
      <a href="/event/explore" class="nav-item">
        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.Home>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
        <p>Home</p>
      </a>
      <a href="/event/explore" class="nav-item">
        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.Star>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
        <p>Following</p>
      </a>
      <a href="/user/history" class="nav-item">
        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.History>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
        <p>Participation History</p>
      </a>
      <a href="/notification" class="nav-item">
        @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.Alert>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
        <p id="notification-icon">Notification</p>
      </a>
    </div>

    <div class="nav-group" id="auth-section">
      @if (IsAuthenticated)
      {
        <div class="profile-dropdown-container">
          <div class="profile-placeholder" id="profile-dropdown-toggle">
            <img src="@profileImageUrl" alt="Profile">
          </div>
          <div class="profile-dropdown" id="profile-dropdown-menu">
            <a href="/user" class="dropdown-item">
              @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.Person>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
              <span>Profile</span>
            </a>
            <form class="dropdown-item" asp-action="signout" asp-controller="auth" method="post">
              <button type="submit" class="signout-btn">
                @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.SignOut>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
                Sign out
              </button>
            </form>
          </div>
        </div>
      }
      else
      {
        <a href="/Auth/Login" class="signin-btn">
          @(await Html.RenderComponentAsync<FluentIcon<Icons.Regular.Size20.Person>>(RenderMode.ServerPrerendered, new { Color = Color.Neutral }))
          Sign in
        </a>
      }
    </div>
  </ul>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Profile dropdown functionality
    const toggleButton = document.getElementById('profile-dropdown-toggle');
    const dropdown = document.getElementById('profile-dropdown-menu');
    
    if (toggleButton && dropdown) {
      toggleButton.addEventListener('click', function(e) {
        e.stopPropagation();
        dropdown.classList.toggle('show');
      });
      
      document.addEventListener('click', function(e) {
        if (!dropdown.contains(e.target) && !toggleButton.contains(e.target)) {
          dropdown.classList.remove('show');
        }
      });
    }
    
    // Mobile menu functionality
    const mobileToggle = document.getElementById('mobile-nav-toggle');
    const navLinks = document.getElementById('navigation-links');
    const authSection = document.getElementById('auth-section');
    
    mobileToggle.addEventListener('click', function() {
      this.classList.toggle('active');
      document.body.classList.toggle('menu-open');
      navLinks.classList.toggle('show-mobile');
      authSection.classList.toggle('show-mobile');
    });
  });
</script>